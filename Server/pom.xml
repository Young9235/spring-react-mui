<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>Server</artifactId>
	<version>1.0.0</version>
	<name>Server</name>
	<description>Server project for Spring Boot</description>
	
	<properties>
		<java.version>1.8</java.version>
	</properties>
	
	<dependencies>
		
		<!-- 서버단에서 벨리데이션 체크를 할 수 있음, @NotNull(message = "id는 필수 값입니다.") 과 같은 어노테이션을 선언을 해줘야 한다. -->
		<!-- <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-validation</artifactId>
		    <version>2.5.2</version>
		</dependency> -->
		
		<!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->
		<!-- <dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.4.1</version>
		</dependency> -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt-api</artifactId>
		    <version>0.11.5</version>
		</dependency>
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt-impl</artifactId>
		    <version>0.11.5</version>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson if Gson is preferred -->
		    <version>0.11.5</version>
		    <scope>runtime</scope>
		</dependency>
		
		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.2</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		
		<dependency>
        	<groupId>com.googlecode.json-simple</groupId>
        	<artifactId>json-simple</artifactId>
        	<version>1.1.1</version>
        </dependency>
		
		<!-- Spring Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- 
			jwt Refresh Token을 DB에 저장 하여 처리 하지 않고, 인메모리 데이터 구조 저장소에 저장하여 사용한다.  
			보안과 로그아웃을 위해, access Token을 30분 미만 단위로 만료를 시켜 Refresh Token으로 access Token을 새로 발급받아야 한다. 
			이때 rf토큰을 DB에 인서트 되야 하고, 만료된 시점에서 DB조회를 하여 매칭 되는지 체크를 해야한다.
			또한, 로그아웃 혹은 rf토큰 만료 시, DB애 rf토큰 삭제 처리 해야하며 다시 로그인 시, DB에 또 rf토큰을 저장해야한다. 
			이러한 DB CRUD 처리를 하지 않기 위해 스토리지 개념의 redis를 사용한다.
			==> 보안과 로그아웃을 위해 이런 작업을 해야함. ==> 이것에 대한 대체로 redis것이 존재
			==> 쿠키 및 세션을 사용하지 않기 위함 
		-->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
	    	<artifactId>spring-boot-starter-data-redis</artifactId>
	    </dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
